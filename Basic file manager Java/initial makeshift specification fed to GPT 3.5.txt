Write Java code, utilizing Java Design Models while seperating the code into files as required, that when executed prompts a UI with a Button containing text Value "Get Started", this UI shall be named "Start_Up". Clicking on the "Get Started" button creates a Folder in the in the Directory Named "File_Management_Folder". Clicking on "Get Started" moves the user to another interface which contains three buttons centered in the middle of the ui with 20px of padding between them. The buttons shall have text values of "Create a File", "Delete a File", and "Edit a File" respectively. Under the three buttons is a button valued "End Experience", Clicking on "End Experience" Shall delete the folder "File_Management_folder" and close up the ui window. This UI Shall be referenced to using the value "Choices".

Clicking on "Create a File" will lead the user to a ui showcasing an input field that would dictate the name of the file, to its right by 10px would be a drop-down list which contains the type of files that can be created, it shall contain the two choices of .txt or .java. The input field and the drop down list must be centered in the middle of the screen. Under the Input field and the drop down list would be a button with text "Create File" Centered under the input field and the drop down list with 10px of padding. Clicking on "Create File" would then create a file in the folder "File_Management_Folder", the File's name shall be what was instantiated in the input field, the type would be what was selected from the options in the drop down list. Under the "Create File" button by 10 px is a button with text value "Back to Choices", Clicking on "Back to Choices" shall return the user to the "Choices" ui. 

Clicking on "Delete a File" shall lead the user to a ui with a list containing all files in the folder "File_Management_Folder", the items in the list shall have a button to their right by 10px with text value "Delete". Clicking the button "Delete" shall delete the file from the "File_Management_Folder" Folder, it should also update the list on the ui. Under The list by 10px shall be a button with text value "Back to Choices", Clicking on "Back to Choices" shall return the user to the "Choices" ui. 

Clicking on "Edit a File" shall transfer the user to a UI with a drop down list, refered to as "Chosen_File", containing all available files in "File_Management_Folder", to the left of the "Chosen_File" drop down list by 5px is a text with value "Current File State:". to the right of the drop down list "Chosen_File" by 5 px is a text field that shows the type of the selected file, whether ".txt" or ".java". Under the drop down list "Chosen_File" is an input field which will be refered to using "New_Name", to the left of the input field "New_Name" by 5px is a text with the value "New File State:", to the right of the input field "New_Name" by 5px is a drop down list refered to as "File_Type". "File_Type"'s original value shall be instantiated to the value equal to the file type of the file chosen in "Chosen_File". "File_Type" shall have two available values, ".txt" or ".java". Under the input field shall be two buttons, a button with text value "Back to Choices", Clicking on "Back to Choices" shall return the user to the "Choices" ui, and a button with the value "Submit Changes" which when clicked shall update the name of the file chosen in "Chosen_file" to what was input in the input field "New_Name", and update the type of the file to what was chosen in "File_Type". Clicking on "Submit Changes" Shall also prompt an alert with the text "Changes have been done" with a button with text value "OK" that dismesses the alert when clicked. The alert should dismiss automatically after 5 seconds if the button has not been clicked. Clicking on "Submit Changes" shall refresh the ui to show any changes done when viewing "Chosen_File" drop down list.

The Code must be readable, and must contain a file Named documentation.java which contains comments explaining what Design Models were used and why.








